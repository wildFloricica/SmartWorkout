@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using SmartWorkout.Entities
<div class="top-row ps-3 navbar navbar-dark">
	<div class="container-fluid">
		<a class="navbar-brand" href="">SmartWorkout</a>
	</div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
	<nav class="flex-column">
		<div class="nav-item px-3">
			<NavLink class="nav-link" href="" Match="NavLinkMatch.All">
				<span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
			</NavLink>
		</div>

		<AuthorizeView Roles="Administrator" Context="authContext">
			<Authorized>
				<div class="nav-item px-3 d-flex">

					<NavLink class="nav-link" href="users" Match="NavLinkMatch.All">
						<span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Users
					</NavLink>

					<NavLink class="nav-link w-auto" href="user/add" Match="NavLinkMatch.All">
						<span class="m-0 m-0 bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span>
					</NavLink>
				</div>

				<div class="nav-item px-3 d-flex">

					<NavLink class="nav-link" href="exercises" Match="NavLinkMatch.All">
						<span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Exercises
					</NavLink>
					<NavLink class="nav-link w-auto" href="exercise/add" Match="NavLinkMatch.All">
						<span class="m-0 bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span>
					</NavLink>
				</div>
			</Authorized>
		</AuthorizeView>
		<div class="nav-item px-3 d-flex">

			<Button class="nav-link" Match="NavLinkMatch.All" Clicked="@GoToWorkouts">
				<span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Workouts
			</Button>

		</div>
		<div class="nav-item px-3 d-flex">

			<NavLink class="nav-link" href="exercise-logs" Match="NavLinkMatch.All">
				<span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> ExerciseLogs
			</NavLink>

		</div>

	</nav>
</div>


@code{
	[Inject]

	private ProtectedSessionStorage SessionStorage { get; set; }
	[Inject]
	public NavigationManager NavigationManager{ get; set; }

	public async void GoToWorkouts()
	{
		var user = await SessionStorage.GetAsync<User>("User");
		if (user.Value == null)
		{
			NavigationManager.NavigateTo($"/workouts/");
			return;
		}
		else
		{
			if(user.Value.IsTrainer)
				NavigationManager.NavigateTo($"/workouts/");

			else NavigationManager.NavigateTo($"/workouts/{user.Value.Id}");
		}
	}

		}